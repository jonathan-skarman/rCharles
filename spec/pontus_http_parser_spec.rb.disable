# frozen_string_literal: true

require_relative 'spec_helper'
require_relative '../lib/request'
# require_relative '../lib/gud_request'

describe 'Request' do
  describe 'INDEX' do
    before do
      @request = Request.new(File.read('./spec/example_requests/get-index.request.txt'))
    end

    it 'METHOD' do
      assert_equal :get, @request.method
    end

    it 'RESOURCE' do
      assert_equal '/', @request.resource
    end

    it 'VERSION' do
      assert_equal 'HTTP/1.1', @request.version
    end

    it 'HEADERS' do
      assert_equal ({ 'Host' => 'developer.mozilla.org', 'Accept-Language' => 'fr' }), @request.headers
    end

    it 'PARAMS' do
      assert_nil @request.params
    end
  end

  describe 'FRUIT' do
    before do
      @request = Request.new(File.read('./spec/example_requests/get-fruits-with-filter.request.txt'))
    end

    it 'METHOD' do
      assert_equal :get, @request.method
    end

    it 'RESOURCE' do
      assert_equal '/fruits', @request.resource
    end

    it 'VERSION' do
      assert_equal 'HTTP/1.1', @request.version
    end

    it 'HEADERS' do
      assert_equal ({ 'Host' => 'fruits.com', 'User-Agent' => 'ExampleBrowser/1.0', 'Accept-Encoding' => 'gzip, deflate', 'Accept' => '*/*' }), @request.headers
    end

    it 'PARAMS' do
      assert_equal ({ 'type' => 'bananas', 'minrating' => '4' }), @request.params
    end
  end

  describe 'LOGIN' do
    before do
      @request = Request.new(File.read('./spec/example_requests/post-login.request.txt'))
    end

    it 'METHOD' do
      assert_equal :post, @request.method
    end

    it 'RESOURCE' do
      assert_equal '/login', @request.resource
    end

    it 'VERSION' do
      assert_equal 'HTTP/1.1', @request.version
    end

    it 'HEADERS' do
      assert_equal ({ 'Host' => 'foo.example', 'Content-Type' => 'application/x-www-form-urlencoded', 'Content-Length' => '39' }), @request.headers
    end

    it 'PARAMS' do
      assert_equal ({ 'username' => 'grillkorv', 'password' => 'verys3cret!' }), @request.params
    end
  end

  describe 'EXAMPLES' do
    before do
      @request = Request.new(File.read('./spec/example_requests/get-examples.request.txt'))
    end

    it 'METHOD' do
      assert_equal :get, @request.method
    end

    it 'RESOURCE' do
      assert_equal '/examples', @request.resource
    end

    it 'VERSION' do
      assert_equal 'HTTP/1.1', @request.version
    end

    it 'HEADERS' do
      assert_equal ({ 'Host' => 'example.com', 'User-Agent' => 'ExampleBrowser/1.0', 'Accept-Encoding' => 'gzip, deflate', 'Accept' => '*/*' }), @request.headers
    end

    it 'PARAMS' do
      assert_nil @request.params
    end
  end
end

# describe 'NAME' do

#   before do
#     @request = Request.new(File.read('FILE'))
#   end

#   it 'METHOD' do
#     assert_equal ยง, @request.method
#   end

#   it 'RESOURCE' do
#     assert_equal ยง, @request.resource
#   end

#   it 'VERSION' do
#     assert_equal ยง, @request.version
#   end

#   it 'HEADERS' do
#     assert_equal ยง, @request.headers
#   end

#   it 'PARAMS' do
#     assert_equal ยง, @request.params
#   end

# end
